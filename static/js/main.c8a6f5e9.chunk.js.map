{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/Loader/Loader.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","Loader","FindMovie","onAdd","useState","query","setQuery","setMovie","movieError","setMovieError","isMovie","setIsMovie","isLoader","setIsLoader","handleInputChange","event","a","target","value","length","onSubmit","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","data","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","onChange","disabled","onClick","App","setMovies","some","movieWithArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8a6f5e9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable padding-line-between-statements */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { Loader } from '../Loader';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie>();\n  const [movieError, setMovieError] = useState(false);\n  const [isMovie, setIsMovie] = useState(false);\n  const [isLoader, setIsLoader] = useState(false);\n\n  const handleInputChange = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    /* коли я роблю cosnt [value] = event.target, в мене горить лінтер, що тип не підходить, а писати any думаю помага ідея */\n    setQuery(event.target.value);\n\n    if (event.target.value.length === 0) {\n      setMovieError(false);\n    }\n  };\n\n  const handleMovieSubmit = (\n    event: React.ChangeEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n\n    setIsLoader(true);\n\n    getMovie(query).then((data) => {\n      if ('Error' in data) {\n        setMovieError(true);\n\n        return;\n      }\n\n      // eslint-disable-next-line max-len\n      const defaultImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n      setMovie({\n        title: data.Title,\n        description: data.Plot,\n        imgUrl: data.Poster || defaultImg,\n        imdbUrl: data.Poster,\n        imdbId: data.imdbID,\n      });\n\n      setIsMovie(true);\n    }).finally(() => setIsLoader(false));\n  };\n\n  const handleBtnChange = () => {\n    if (movie) {\n      onAdd(movie);\n    }\n\n    setIsMovie(false);\n    setQuery('');\n    setMovieError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleMovieSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n          {movieError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n        {isLoader && (\n          <Loader />\n        )}\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              onClick={handleBtnChange}\n              disabled={!query}\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && isMovie && (\n          <MovieCard movie={movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=985bd68';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie): void => {\n    const isMovie = movies\n      .some(movieWithArray => movieWithArray.imdbId === movie.imdbId);\n\n    if (isMovie) {\n      return;\n    }\n\n    setMovies([\n      ...movies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}